# This workflow build and publish artifacts for azure modules

name: Build Modules

permissions:
  contents: write

on:

  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
   
  workflow_dispatch:


jobs:
  diff:
    runs-on: ubuntu-latest
   
    outputs:
      MODULES: ${{steps.changed-files.outputs.all_changed_and_modified_files}}


    steps:


      - uses: actions/checkout@v4
     
      - name: Get changed modules
        uses: tj-actions/changed-files@v44
        id: changed-files
        with:
          dir_names: true
          matrix: true
          files: |
            **/changelog.yml
            **/changelog.yaml
          files_ignore: |
            .github/**
            .gitignore
            **.md


      - name: List all changed modules
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
        run: |
          echo "Directories"
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done


  build:
    if: needs.diff.outputs.MODULES != '[]'
    runs-on: ubuntu-latest


    needs: diff


    strategy:
      matrix:
        modules: ${{ fromJSON(needs.diff.outputs.MODULES) }}


    steps:
      - uses: actions/checkout@v4


      - name: Read changelog file
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: read_changelog
        with:
          config: ${{ matrix.modules }}/changelog.yml


      - name: Build artifact
        uses: vimtor/action-zip@v1.2
        with:
          files: ${{ matrix.modules }}/
          dest: ${{ steps.read_changelog.outputs['name'] }}.zip


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.read_changelog.outputs['name'] }}-${{ steps.read_changelog.outputs['version'] }}
          release_name: Release ${{ steps.read_changelog.outputs['name'] }} ${{ steps.read_changelog.outputs['version'] }}
          commitish: ${{ github.base_ref }}
          body: |
            ${{ steps.read_changelog.outputs[steps.read_changelog.outputs['version']] }}
          draft: false
          prerelease: false


      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{ steps.read_changelog.outputs['name'] }}.zip
          asset_name: module.zip
          asset_content_type: application/zip



